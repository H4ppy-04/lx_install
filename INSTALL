#!/bin/bash
#
# Copyright Â© 2024 Joshua Rose
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

. bin/defs.sh
. bin/util.sh
. bin/check/font_installed.sh
. bin/check/online.sh
. bin/check/root.sh
. bin/install/astro.sh
. bin/install/bash.sh
. bin/install/font.sh
. bin/install/package.sh
. bin/install/rust.sh
. bin/install/treesitter.sh
. bin/install/vim.sh
. bin/install/zsh.sh

# cleanup unneeded files if installed previously
rm -fr $HOME/tmp
rm -fr /tmp/vim
rm -fr /tmp/packages
rm -fr /tmp/rustup

check_online
check_not_root $USER

sudo apt update

# ADD ANY OTHER PACKAGES YOU WISH TO INSTALL HERE
install_packages "git" "curl" "wget" "fzf" "gpg"

# Choose one or more of the following fonts:
install_fonts "NerdFontsSymbolsOnly.zip" "FiraCode.zip" "FiraMono.zip" "Agave.zip" "DroidSansMono.zip" "FantasqueSansMono.zip"


if [ ! -f "$PATH_USER_BINARIES/zsh" ] || [ ! -f "$HOME/.zshrc" ]; then
  read -p "Would you like to install zsh? (*Y/n) " -n 1 -r REPLY
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    install_zsh
    rm -f $HOME/.zsh_history
    stow --target=$HOME --dir=src/zsh/
  else
    install_bash
    stow --target=$HOME --dir=src/bash/
  fi
fi

if [ ! -f "$PATH_USER_BINARIES/vim" ]; then
  read -p "Would you like to install vim? (*Y/n) " -n 1 -r REPLY
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    install_vim
    stow --target=$HOME --dir=src/vim
  else
    install_astro
  fi
fi

if [ ! -d "$HOME/.rustup" ]; then
  read -p "Would you like to install Rust? (*Y/n) " -n 1 -r REPLY
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    install_rust
  fi
fi

if [ -x "$(command -v eza)" ]; then
  read -p "Would you like to install eza (ls alternative)? (*Y/n) " -n 1 -r REPLY
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    . bin/install/eza.sh
  fi
fi

if [ -x "$(command -v tmux)" ]; then
  read -p "Would you like to install tmux? (*Y/n) " -n 1 -r REPLY
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    mkdir -p ~/.tmux/plugins ~/.config/tmux
    install_packages "tmux"

    read -p "Would you like to install a pre-populated tmux config file?" -n 1 -r REPLY
    if [[ $REPLY =~ ^[Yy]$ ]]; then
      # install tpm
      git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
      # link config file(s)
      stow --target=$HOME/.config/tmux --dir=src/tmux
    else
      read -p "Would you like to install a plugin manager for tmux? (recommended)" -n 1 -r REPLY
      if [[ $REPLY =~ ^[Yy]$ ]]; then
        # install tpm
        git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
        # add tpm to the config
        touch ~/.config/tmux/tmux.conf
        echo "set -g @plugin 'tmux-plugins/tpm'" >> ~/.config/tmux/tmux.conf
        echo "run '~/.tmux/plugins/tpm/tpm'" >> ~/.config/tmux/tmux.conf
      fi
    fi
  fi
fi

exit 0
